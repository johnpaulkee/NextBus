package ca.ubc.cpsc210.nextbus.model;

import java.util.ArrayList;
import java.util.List;

import ca.ubc.cpsc210.nextbus.util.BoundingBox;
import ca.ubc.cpsc210.nextbus.util.Segment;

/**
 * A bus route
 */
public class BusRoute implements Comparable<BusRoute> {
	private String name;
	private BoundingBox bounds;		
	private List<Segment> segments;  
	private boolean hasSegments;		
	private String mapURL;	        

	/**
	 * Constructor 
	 * 
	 * @param name  the name of this bus route
	 */
	public BusRoute(String name) {
		this.name = name;
		segments = new ArrayList<Segment>();
		bounds = new BoundingBox();	
		hasSegments = false;
		mapURL = null;
	}
	
	/**
	 * Constructor
	 * 
	 * Name of route is set to "unknown"
	 */
	public BusRoute() {
		this("unknown");
	}

	/**
	 * Gets name of route
	 * @return name of route
	 */
	public String getName() {
		return name;
	}

	/**
	 * Sets name of route
	 * @param name  name of the route
	 */
	public void setName(String name) {
		this.name = name;
	}
	

	/**
	 * Gets URL for this route's map
	 * @return url for route map
	 */
	public String getMapURL() {
		return mapURL;
	}

	/**
	 * Sets URL for this route's map
	 * @param mapURL  the map's URL
	 */
	public void setMapURL(String mapURL) {
		this.mapURL = mapURL;
	}

	/**
	 * Sets a bounding box for this bus route
	 * @param north  northern latitude of boundary
	 * @param south  southern latitude of boundary
	 * @param east   eastern longitude of boundary
	 * @param west   western longitude of boundary
	 */
	public void setBounds(double north, double south, double east, double west) {
		bounds = new BoundingBox(north, south, east, west);
	}

	public BoundingBox getBounds() {
		return bounds;
	}

	/**
	 * Add a segment to this route
	 * 
	 * @param seg  segment to add
	 */
	public void addSegment(Segment seg) {
		segments.add(seg);
		hasSegments = true;
	}
	
	/**
	 * Determines if route has segments
	 * 
	 * @return true if route has segments, false otherwise
	 */
	public boolean hasSegments() {
		return hasSegments;
	}

    /**
     * Get list of segments associated with this route
     * 
     * @return  list of segments for this route
     */
    public List<Segment> getSegments() {
        return segments;
    }


    /**
     * Produces name of route
     */
	@Override
	public String toString() {
		return name;
	}

	/**
	 * Generated by Eclipse
	 * Needed so that BusRoute objects can be used as keys in a HashMap
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	/**
	 * Generated by Eclipse
	 * Needed so that BusRoute objects can be used as keys in a HashMap
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		BusRoute other = (BusRoute) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

	/**
	 * Compare bus routes by name
	 */
    @Override
    public int compareTo(BusRoute other) {
        return name.compareTo(other.name);
    }
	
	
}
